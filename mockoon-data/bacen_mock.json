{
  "uuid": "bb2ab941-188c-4a06-a8ed-e4f2f3f28a39",
  "lastMigration": 33,
  "name": "Bacen mock",
  "endpointPrefix": "",
  "latency": 0,
  "port": 9090,
  "hostname": "",
  "folders": [
    {
      "uuid": "2c841dbe-d724-466c-a175-996a2568e2fe",
      "name": "Chave Pix",
      "children": [
        {
          "type": "route",
          "uuid": "9506cb83-cc20-4468-bb1d-1963991ebcb7"
        }
      ]
    },
    {
      "uuid": "5211b0dd-5eb0-40b4-9252-3921af4f5889",
      "name": "Antifraude",
      "children": [
        {
          "type": "route",
          "uuid": "30684721-becd-40ea-8245-a578708546ec"
        }
      ]
    },
    {
      "uuid": "bba89aaa-4869-4f73-b88a-6523d1a11866",
      "name": "Authentication",
      "children": [
        {
          "type": "route",
          "uuid": "5888e0b5-5dd1-4b76-a30d-8ad061ba2a8c"
        }
      ]
    },
    {
      "uuid": "32109e1e-e394-4ed2-929a-d121634aefb7",
      "name": "Bacen",
      "children": [
        {
          "type": "route",
          "uuid": "68bc1744-1374-4967-8bf9-14296523a7de"
        }
      ]
    }
  ],
  "routes": [
    {
      "uuid": "9506cb83-cc20-4468-bb1d-1963991ebcb7",
      "type": "http",
      "documentation": "Verificar existência de chaves",
      "method": "post",
      "endpoint": "api/keys/check",
      "responses": [
        {
          "uuid": "97c2ed70-b24f-4ced-81f1-7e303fbe1fb5",
          "body": "{\n  \"hasEntry\": \"true\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Content 40410065897",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.key",
              "value": "40410065897",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "436e7123-0371-4e4a-8718-525bf3308b49",
          "body": "{\n  \"hasEntry\": \"false\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Content not found",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.key",
              "value": "^(?!.*40410065897).*$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "de947a1c-58f2-4120-b068-43e6adfae9b1",
          "body": "{\n  \"message\": \"Not authorized\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "30684721-becd-40ea-8245-a578708546ec",
      "type": "http",
      "documentation": "Consulta se a chave está marcada como fraude",
      "method": "post",
      "endpoint": "api/fraud-markers",
      "responses": [
        {
          "uuid": "84784bc8-9f12-4186-89c4-a23e00f6d3cd",
          "body": "{\r\n  \"fraudMarker\": \"true\"\r\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Retorno positivo se informado que o  CPF 395.991.500-40 está marcado como fraude",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.key",
              "value": "39599150040",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "97f168ab-32a6-4464-8155-9c732b1e8e0a",
          "body": "{\r\n  \"fraudMarker\": \"false\"\r\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Retorno negativo se informado um CPF diferente CPF 395.991.500-40",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.key",
              "value": "^(?!.*39599150040).*$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "55f00840-fb9d-42a1-97a1-0eb6cd12dd6f",
          "body": "{\n  \"message\": \"Not authorized\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "5888e0b5-5dd1-4b76-a30d-8ad061ba2a8c",
      "type": "http",
      "documentation": "",
      "method": "post",
      "endpoint": "api/token",
      "responses": [
        {
          "uuid": "51ad38c7-ef44-4c63-b63f-e66863c5240d",
          "body": "{\n  \"message\": \"Bad credentials\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "7775f466-6401-46a1-ad80-aeda2adae174",
          "body": "{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n  \"expires_in\": 300\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.grant_type",
              "value": "client_credentials",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.client_id",
              "value": "44fc2b1a-d9c4-356f-a76e-ceddb495bcf3",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.client_secret",
              "value": "255c4b4b-c89f-4560-9d19-b85d8d5568c9",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "68bc1744-1374-4967-8bf9-14296523a7de",
      "type": "http",
      "documentation": "Envia Cobrança imediata para o BACEN",
      "method": "post",
      "endpoint": "api/bacen/send-psp-payment",
      "responses": [
        {
          "uuid": "e60bf8fb-f10d-4583-b8b6-17cb9fba5d02",
          "body": "{\r\n  \"status\": \"OK\"\r\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "5f19639e-453e-46cf-b474-ff7ff1f113be",
          "body": "{\n  \"message\": \"Not authorized\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    }
  ],
  "rootChildren": [
    {
      "type": "folder",
      "uuid": "bba89aaa-4869-4f73-b88a-6523d1a11866"
    },
    {
      "type": "folder",
      "uuid": "2c841dbe-d724-466c-a175-996a2568e2fe"
    },
    {
      "type": "folder",
      "uuid": "5211b0dd-5eb0-40b4-9252-3921af4f5889"
    },
    {
      "type": "folder",
      "uuid": "32109e1e-e394-4ed2-929a-d121634aefb7"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "*"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "callbacks": []
}