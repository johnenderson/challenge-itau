{
  "uuid": "8f6529cd-092f-4704-8218-41b21b27813e",
  "lastMigration": 33,
  "name": "Bacen mock",
  "endpointPrefix": "",
  "latency": 0,
  "port": 9090,
  "hostname": "",
  "folders": [
    {
      "uuid": "ba438c31-94ca-4633-8c77-426ee54cfbdd",
      "name": "Chave Pix",
      "children": [
        {
          "type": "route",
          "uuid": "0c8a4d4b-677f-4644-91f5-b19e5c9e69d9"
        }
      ]
    },
    {
      "uuid": "257c80dd-9c85-403d-99de-6ddb64111ee5",
      "name": "Antifraude",
      "children": [
        {
          "type": "route",
          "uuid": "fd1e1559-f1ac-4635-8241-56d2c44d23db"
        }
      ]
    },
    {
      "uuid": "363fe3f8-1968-4ad2-83ff-7b6dc5f5de69",
      "name": "Authentication",
      "children": [
        {
          "type": "route",
          "uuid": "1f2fa42d-cca8-42fc-b320-3e900d1f3ef8"
        }
      ]
    }
  ],
  "routes": [
    {
      "uuid": "0c8a4d4b-677f-4644-91f5-b19e5c9e69d9",
      "type": "http",
      "documentation": "Verificar existência de chaves",
      "method": "post",
      "endpoint": "api/keys/check",
      "responses": [
        {
          "uuid": "6b64b289-68d4-490f-a065-046a6e6c57cf",
          "body": "{\n  \"hasEntry\": \"true\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Content 40410065897",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.key",
              "value": "40410065897",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "1e213224-c394-4797-bcae-2648da0cb254",
          "body": "{\n  \"hasEntry\": \"false\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Content not found",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.key",
              "value": "^(?!.*40410065897).*$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "8fa03974-ffdd-48f8-b5be-ef8a864e3f55",
          "body": "{\n  \"message\": \"Not authorized\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "fd1e1559-f1ac-4635-8241-56d2c44d23db",
      "type": "http",
      "documentation": "Consulta se a chave está marcada como fraude",
      "method": "post",
      "endpoint": "api/fraud-markers",
      "responses": [
        {
          "uuid": "f67f9b4d-0282-480d-968e-d981b44a2b18",
          "body": "{\r\n  \"fraudMarker\": \"true\"\r\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Retorno positivo se informado que o  CPF 395.991.500-40 está marcado como fraude",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.key",
              "value": "39599150040",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "9e5895bd-a0b9-43e3-83ce-e7cfef978b77",
          "body": "{\r\n  \"fraudMarker\": \"false\"\r\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Retorno negativo se informado um CPF diferente CPF 395.991.500-40",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.key",
              "value": "^(?!.*39599150040).*$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "23023fd7-8b5a-4ff6-8697-510beaf42f04",
          "body": "{\n  \"message\": \"Not authorized\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "authorization",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "1f2fa42d-cca8-42fc-b320-3e900d1f3ef8",
      "type": "http",
      "documentation": "",
      "method": "post",
      "endpoint": "api/token",
      "responses": [
        {
          "uuid": "e920d249-b3cb-405d-ace0-a7b511335f15",
          "body": "{\n  \"message\": \"Bad credentials\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "4a63a477-67f1-4550-a54d-dacb8c7a727a",
          "body": "{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n  \"expires_in\": 300\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.grant_type",
              "value": "client_credentials",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.client_id",
              "value": "44fc2b1a-d9c4-356f-a76e-ceddb495bcf3",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.client_secret",
              "value": "255c4b4b-c89f-4560-9d19-b85d8d5568c9",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    }
  ],
  "rootChildren": [
    {
      "type": "folder",
      "uuid": "363fe3f8-1968-4ad2-83ff-7b6dc5f5de69"
    },
    {
      "type": "folder",
      "uuid": "ba438c31-94ca-4633-8c77-426ee54cfbdd"
    },
    {
      "type": "folder",
      "uuid": "257c80dd-9c85-403d-99de-6ddb64111ee5"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "*"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "callbacks": []
}